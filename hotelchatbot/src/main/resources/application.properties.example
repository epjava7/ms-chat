spring.application.name=hotelchatbot
server.port=8081

# openai
spring.ai.openai.api-key=YOUR_OPENAI_API_KEY
spring.ai.openai.chat.options.model=gpt-4.1-nano

# database
spring.datasource.url=jdbc:postgresql://localhost:5432/hotelchatbot
spring.datasource.username=YOUR_DB_USERNAME
spring.datasource.password=YOUR_DB_PASSWORD
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true

# resilience4j
resilience4j.circuitbreaker.instances.openAiCB.register-health-indicator=true
resilience4j.circuitbreaker.instances.openAiCB.sliding-window-size=1
resilience4j.circuitbreaker.instances.openAiCB.failure-rate-threshold=100
resilience4j.circuitbreaker.instances.openAiCB.wait-duration-in-open-state=5s

# kafka
spring.kafka.bootstrap-servers=YOUR_KAFKA_BOOTSTRAP_SERVERS
spring.kafka.consumer.group-id=hotelchatbot
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer